{"version":3,"sources":["components/TableBody/TableBody.js","components/Loader/Loader.js","components/Hooks/UseServerData.js","App.js","index.js"],"names":["TableBody","rows","console","log","className","Table","striped","bordered","variant","results","length","map","row","date","title","count","distance","id","Loader","UseServerData","url","useState","setRows","isLoading","setIsLoading","useEffect","axios","method","then","response","data","App","pageActive","setPageActive","rowsLimit","setRowsLimit","pageCount","setPageCount","useMemo","Math","ceil","pageItems","i","push","Pagination","Item","active","onClick","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAiCeA,EA7BG,SAACC,GAEf,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,QAAf,UACI,uCACA,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,QAAQ,OAAOJ,UAAU,OAAjD,UACI,gCACI,+BACI,0DACA,kFACA,8FACA,mGAGR,gCAC6B,IAAxBH,EAAKQ,QAAQC,OAAeT,EAAKQ,QAAQE,KAAI,SAAAC,GAAG,OAC7C,+BACI,6BAAKA,EAAIC,OACT,6BAAKD,EAAIE,QACT,6BAAKF,EAAIG,QACT,6BAAKH,EAAII,aAJJJ,EAAIK,OAMb,wICdTC,G,MATA,WACX,OACI,sBAAKd,UAAU,aAAf,UACI,wBACA,6B,iBCeGe,EAnBO,SAACC,GACnB,MAAwBC,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAcA,OAVAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRP,IAAKA,IACNQ,MAAK,SAAAC,GACJP,EAAQO,EAASC,MACjBN,GAAa,QAElB,CAACJ,IAEG,CAAC,CAACnB,OAAMsB,aAZC,eC2CLQ,MA3Cf,WACI,MAAoCV,mBAAS,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAkCZ,mBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAkCd,mBAAS,GAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACMjB,EAAMkB,mBAAQ,WAChB,MAAO,0CAA6CN,EAAaE,IAClE,CAACF,IACJ9B,QAAQC,IAAIiB,GACZ,MAAqCD,EAAcC,GAAnD,0BAAQnB,EAAR,EAAQA,KAAMsB,EAAd,EAAcA,UAAd,KACArB,QAAQC,IAAIF,GACZC,QAAQC,IAAIoB,GAGZE,qBAAU,WACFF,IACAY,EAAalC,EAAKQ,QAAQC,QAC1B2B,EAAaE,KAAKC,KAAKvC,EAAKc,MAAQmB,QAG5ChC,QAAQC,IAAI+B,GACZhC,QAAQC,IAAIiC,GAEZ,IAAMK,EAAYH,mBAAQ,WAEtB,IADA,IAAIG,EAAY,GADY,WAEnBC,GACLD,EAAUE,KACN,cAACC,EAAA,EAAWC,KAAZ,CAAyBC,OAAQJ,IAAMV,EAAYe,QAAS,kBAAMd,EAAcS,IAAhF,SACKA,EAAI,GADaA,KAFrBA,EAAI,EAAGA,EAAIN,EAAWM,IAAM,EAA5BA,GAOT,OAAOD,IACR,CAACT,EAAY/B,EAAKS,SAIrB,OAHAR,QAAQC,IAAIsC,GACZvC,QAAQC,IAAIiC,GAGR,cAACY,EAAA,EAAD,UACKzB,EAAY,cAAC,EAAD,CAAWtB,KAAMA,IAAU,cAAC,EAAD,OCzCpDgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4eb0cf36.chunk.js","sourcesContent":["import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst TableBody = (rows) => {\n    console.log(rows)\n    return(\n        <div className=\"Table\">\n            <h1>Table</h1>\n            <Table striped bordered variant=\"dark\" className=\"mt-3\">\n                <thead>\n                    <tr>\n                        <th>Дата</th>\n                        <th>Название</th>\n                        <th>Количество</th>\n                        <th>Расстояние</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.results.length !== 0 ? rows.results.map(row => (\n                        <tr key={row.id}>\n                            <td>{row.date}</td>\n                            <td>{row.title}</td>\n                            <td>{row.count}</td>\n                            <td>{row.distance}</td>\n                        </tr>\n                    )): <h4>Данные не найдены.</h4>}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport styles from './loader.css'\n\nconst Loader = () => {\n    return (\n        <div className=\"lds-ripple\">\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Loader;\n","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst UseServerData = (url) => {\n    const [rows, setRows] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n\n    const getRows = () => {}\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: url\n        }).then(response => {\n            setRows(response.data)\n            setIsLoading(true)\n        })\n    }, [url])\n\n    return [{rows, isLoading}, getRows]\n}\n\nexport default UseServerData;\n","import React, {useState, useEffect, useMemo} from \"react\";\nimport {Container, Pagination} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TableBody from \"./components/TableBody/TableBody\";\nimport Loader from \"./components/Loader/Loader\";\nimport UseServerData from \"./components/Hooks/UseServerData\";\n\nfunction App() {\n    const [pageActive, setPageActive] = useState(0)\n    const [rowsLimit, setRowsLimit] = useState(0)\n    const [pageCount, setPageCount] = useState(0)\n    const url = useMemo(() => {\n        return \"http://127.0.0.1:8000/api/rows/?offset=\" + (pageActive * rowsLimit)\n    }, [pageActive])\n    console.log(url)\n    const [{rows, isLoading}, getRows] = UseServerData(url)\n    console.log(rows)\n    console.log(isLoading)\n\n\n    useEffect(() => {\n        if (isLoading) {\n            setRowsLimit(rows.results.length)\n            setPageCount(Math.ceil(rows.count / rowsLimit))\n        }\n    })\n    console.log(rowsLimit)\n    console.log(pageCount)\n\n    const pageItems = useMemo(() => {\n        let pageItems = []\n        for (let i = 0; i < pageCount; i++) {\n            pageItems.push(\n                <Pagination.Item key={i} active={i === pageActive} onClick={() => setPageActive(i)}>\n                    {i + 1}\n                </Pagination.Item>\n            )\n        }\n        return pageItems\n    }, [pageActive, rows.length])\n    console.log(pageItems)\n    console.log(pageCount)\n\n    return(\n        <Container>\n            {isLoading ? <TableBody rows={rows}/> : <Loader/>}\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}