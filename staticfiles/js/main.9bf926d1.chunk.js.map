{"version":3,"sources":["components/Search/Search.js","components/TableBody/TableBody.js","components/Loader/Loader.js","components/Hooks/UseServerData.js","components/Paginator/Paginator.js","App.js","index.js"],"names":["Search","onSearchSend","useState","searchValue","setSearchValue","className","InputGroup","DropdownButton","as","Prepend","variant","title","id","Dropdown","Item","href","FormControl","aria-describedby","value","onChange","event","target","Append","Button","onClick","TableBody","rows","Table","striped","bordered","results","length","map","row","date","count","distance","Loader","UseServerData","url","setRows","isLoading","setIsLoading","useEffect","axios","method","then","response","data","Paginator","items","Pagination","App","pageActive","setPageActive","rowsLimit","setRowsLimit","pageCount","setPageCount","useMemo","Math","ceil","pageItems","i","push","active","Container","text","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bf926d1.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, FormControl, InputGroup, Dropdown, DropdownButton} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Search = ({onSearchSend}) => {\n    const [searchValue, setSearchValue] = useState('')\n\n    return (\n        <div className=\"Search\">\n            <InputGroup className=\"mb-3\">\n                <DropdownButton\n                    as={InputGroup.Prepend}\n                    variant=\"outline-secondary\"\n                    title=\"Колонка\"\n                    id=\"input-group-dropdown-1\"\n                >\n                    <Dropdown.Item href=\"#\">Название</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Количество</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Расстояние</Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton\n                    as={InputGroup.Prepend}\n                    variant=\"outline-secondary\"\n                    title=\"Условие\"\n                    id=\"input-group-dropdown-2\"\n                >\n                    <Dropdown.Item href=\"#\">Больше</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Меньше</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Равно</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Содержит</Dropdown.Item>\n                </DropdownButton>\n                <FormControl\n                    aria-describedby=\"basic-addon2\"\n                    value={searchValue}\n                    onChange={(event) => {\n                        setSearchValue(event.target.value)\n                    }}\n                />\n                <InputGroup.Append>\n                    <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                            onSearchSend(searchValue)\n                        }}\n                    >\n                        Найти\n                    </Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </div>\n    );\n}\n\nexport default Search;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Search from \"../Search/Search\";\n\nconst TableBody = ({rows, onSearchSend}) => {\n\n    return (\n        <div className=\"Table\">\n            <h1>Таблица</h1>\n            <Search onSearchSend={onSearchSend}/>\n            <Table striped bordered variant=\"dark\" className=\"mt-3\">\n                <thead>\n                <tr>\n                    <th>Дата</th>\n                    <th>Название</th>\n                    <th>Количество</th>\n                    <th>Расстояние</th>\n                </tr>\n                </thead>\n                <tbody>\n                {rows.results.length !== 0 ? rows.results.map(row => (\n                    <tr key={row.id}>\n                        <td>{row.date}</td>\n                        <td>{row.title}</td>\n                        <td>{row.count}</td>\n                        <td>{row.distance}</td>\n                    </tr>\n                )) : <h4>Данные не найдены.</h4>}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport styles from './loader.css'\n\nconst Loader = () => {\n    return (\n        <div className=\"lds-ripple\">\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Loader;\n","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst UseServerData = (url) => {\n    const [rows, setRows] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: url\n        }).then(response => {\n            setRows(response.data)\n            setIsLoading(true)\n        })\n    }, [url])\n\n    return [rows, isLoading]\n}\n\nexport default UseServerData;\n","import React from \"react\";\nimport {Pagination} from \"react-bootstrap\";\n\nconst Paginator = ({items}) => {\n    return (\n        <Pagination className=\"mt-3\">\n            {items}\n        </Pagination>\n    )\n}\n\nexport default Paginator;\n","import React, {useState, useEffect, useMemo, Fragment} from \"react\";\nimport {Container, Pagination} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TableBody from \"./components/TableBody/TableBody\";\nimport Loader from \"./components/Loader/Loader\";\nimport UseServerData from \"./components/Hooks/UseServerData\";\nimport Paginator from \"./components/Paginator/Paginator\";\n\nfunction App() {\n    const [pageActive, setPageActive] = useState(0)\n    const [rowsLimit, setRowsLimit] = useState(0)\n    const [pageCount, setPageCount] = useState(0)\n    const url = useMemo(() => {\n        return \"http://127.0.0.1:8000/api/rows/?offset=\" + (pageActive * rowsLimit)\n    }, [pageActive])\n    const [rows, isLoading] = UseServerData(url)\n    const onSearchSend = (text) => {\n        console.log(text)\n    }\n\n    useEffect(() => {\n        if (isLoading) {\n            setRowsLimit(rows.results.length)\n            setPageCount(Math.ceil(rows.count / rows.results.length))\n        }\n    }, [isLoading])\n\n    const pageItems = useMemo(() => {\n        let pageItems = []\n        for (let i = 0; i < pageCount; i++) {\n            pageItems.push(\n                <Pagination.Item key={i} active={i === pageActive} onClick={() => setPageActive(i)}>\n                    {i + 1}\n                </Pagination.Item>\n            )\n        }\n        return pageItems\n    }, [pageActive, pageCount])\n\n    return (\n        <Container>\n            {isLoading ?\n                <Fragment>\n                    <TableBody rows={rows} onSearchSend={onSearchSend}/>\n                    <Paginator items={pageItems}/>\n                </Fragment>\n                : <Loader/>}\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}