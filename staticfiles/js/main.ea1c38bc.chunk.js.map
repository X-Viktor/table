{"version":3,"sources":["App.js","index.js"],"names":["App","useState","pageActive","setPageActive","pageStart","setPageStart","rows","setRows","useEffect","axios","method","url","then","response","data","pageItems","useMemo","pageLimit","Math","ceil","count","i","push","Pagination","active","onClick","console","log","Container","className","length","results","map","row","date","title","distance","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAqEeA,MAjEf,WACI,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,0CAA4CP,IAClDQ,MAAK,SAAAC,GACJN,EAAQM,EAASC,WAEtB,CAACZ,IAEJ,IACMa,EAAYC,mBAAQ,WAGtB,IAFA,IAAMC,EAAYC,KAAKC,KAAKb,EAAKc,MAFnB,GAGVL,EAAY,GAFY,WAGnBM,GACLN,EAAUO,KACN,cAACC,EAAA,EAAD,CAAoBC,OAAQH,IAAMnB,EAAYuB,QAAS,WACnDtB,EAAckB,GACdhB,EAAaH,EAAae,IAF9B,SAIKI,EAAI,GAJQA,KAFhBA,EAAI,EAAGA,EAAIJ,EAAWI,IAAM,EAA5BA,GAUT,MAAM,CACFN,eAEL,CAACb,IAMJ,OAJAwB,QAAQC,IAAIrB,GACZoB,QAAQC,IAAIzB,GACZwB,QAAQC,IAAIvB,GAGR,eAACwB,EAAA,EAAD,WACI,sBAAKC,UAAU,MAAf,UACI,uCACA,kCACI,+BACI,0DACA,kFACA,8FACA,iGAEa,IAAhBvB,EAAKwB,OAAexB,EAAKyB,QAAQC,KAAI,SAAAC,GAAG,OACrC,+BACI,6BAAKA,EAAIC,OACT,6BAAKD,EAAIE,QACT,6BAAKF,EAAIb,QACT,6BAAKa,EAAIG,aAJJH,EAAII,OAMb,qIAGZ,cAACd,EAAA,EAAD,UACKR,QC3DjBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ea1c38bc.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport {Container, Pagination} from \"react-bootstrap\";\n\nfunction App() {\n    const [pageActive, setPageActive] = useState(0)\n    const [pageStart, setPageStart] = useState(0)\n\n    const [rows, setRows] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: \"http://127.0.0.1:8000/api/rows/?offset=\" + pageStart\n        }).then(response => {\n            setRows(response.data)\n        })\n    }, [pageActive])\n\n    const rowsLimit = 4\n    const pageItems = useMemo(() => {\n        const pageLimit = Math.ceil(rows.count / rowsLimit)\n        let pageItems = []\n        for (let i = 0; i < pageLimit; i++) {\n            pageItems.push(\n                <Pagination key={i} active={i === pageActive} onClick={() => {\n                    setPageActive(i)\n                    setPageStart(pageActive * pageLimit)\n                }}>\n                    {i + 1}\n                </Pagination>\n            )\n        }\n        return{\n            pageItems,\n        }\n    }, [pageActive])\n\n    console.log(rows)\n    console.log(pageActive)\n    console.log(pageStart)\n\n    return(\n        <Container>\n            <div className=\"App\">\n                <h1>Table</h1>\n                <table>\n                    <tr>\n                        <th>Дата</th>\n                        <th>Название</th>\n                        <th>Количество</th>\n                        <th>Расстояние</th>\n                    </tr>\n                    {rows.length !== 0 ? rows.results.map(row => (\n                        <tr key={row.id}>\n                            <td>{row.date}</td>\n                            <td>{row.title}</td>\n                            <td>{row.count}</td>\n                            <td>{row.distance}</td>\n                        </tr>\n                    )): <h4>Данные не найдены.</h4>}\n                </table>\n            </div>\n            <Pagination>\n                {pageItems}\n            </Pagination>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}