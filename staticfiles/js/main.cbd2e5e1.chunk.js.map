{"version":3,"sources":["components/Rows/RowList.js","App.js","index.js"],"names":["RowList","useState","pageActive","setPageActive","rows","setRows","useEffect","axios","method","url","then","response","data","pageItems","useMemo","pageLimit","Math","ceil","count","i","push","Pagination","Item","active","onClick","length","className","Table","striped","bordered","variant","results","map","row","date","title","distance","id","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNA8DeA,MAzDf,WACI,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAGA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,0CANK,EAMwCP,IACnDQ,MAAK,SAAAC,GACJN,EAAQM,EAASC,WAEtB,CAACV,IACJ,IAAMW,EAAYC,mBAAQ,WAGtB,IAFA,IAAMC,EAAYC,KAAKC,KAAKb,EAAKc,MAZnB,GAaVL,EAAY,GAFY,WAGnBM,GACLN,EAAUO,KACN,cAACC,EAAA,EAAWC,KAAZ,CAAyBC,OAAQJ,IAAMjB,EAAYsB,QAAS,kBAAMrB,EAAcgB,IAAhF,SACKA,EAAI,GADaA,KAFrBA,EAAI,EAAGA,EAAIJ,EAAWI,IAAM,EAA5BA,GAOT,OAAON,IACR,CAACX,EAAYE,EAAKqB,SAErB,OACI,sBAAKC,UAAU,QAAf,UACI,uCACA,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,QAAQ,OAAhC,UACI,gCACI,+BACI,0DACA,kFACA,8FACA,mGAGR,gCACiB,IAAhB1B,EAAKqB,OAAerB,EAAK2B,QAAQC,KAAI,SAAAC,GAAG,OACrC,+BACI,6BAAKA,EAAIC,OACT,6BAAKD,EAAIE,QACT,6BAAKF,EAAIf,QACT,6BAAKe,EAAIG,aAJJH,EAAII,OAMb,oIAIR,cAAChB,EAAA,EAAD,UACKR,QC3CFyB,MARf,WACI,OACI,cAACC,EAAA,EAAD,UACI,cAAC,EAAD,OCJZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cbd2e5e1.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport {Pagination, Table} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction RowList() {\n    const [pageActive, setPageActive] = useState(0)\n    const rowsLimit = 4\n\n    const [rows, setRows] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: \"http://127.0.0.1:8000/api/rows/?offset=\" + (pageActive * rowsLimit)\n        }).then(response => {\n            setRows(response.data)\n        })\n    }, [pageActive])\n    const pageItems = useMemo(() => {\n        const pageLimit = Math.ceil(rows.count / rowsLimit)\n        let pageItems = []\n        for (let i = 0; i < pageLimit; i++) {\n            pageItems.push(\n                <Pagination.Item key={i} active={i === pageActive} onClick={() => setPageActive(i)}>\n                    {i + 1}\n                </Pagination.Item>\n            )\n        }\n        return pageItems\n    }, [pageActive, rows.length])\n\n    return(\n        <div className=\"Table\">\n            <h1>Table</h1>\n            <Table striped bordered variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>Дата</th>\n                        <th>Название</th>\n                        <th>Количество</th>\n                        <th>Расстояние</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {rows.length !== 0 ? rows.results.map(row => (\n                    <tr key={row.id}>\n                        <td>{row.date}</td>\n                        <td>{row.title}</td>\n                        <td>{row.count}</td>\n                        <td>{row.distance}</td>\n                    </tr>\n                )): <h4>Данные не найдены.</h4>}\n                </tbody>\n            </Table>\n\n            <Pagination>\n                {pageItems}\n            </Pagination>\n        </div>\n    );\n}\n\nexport default RowList;\n","import React from \"react\";\nimport {Container} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport RowList from \"./components/Rows/RowList\";\n\nfunction App() {\n    return(\n        <Container>\n            <RowList/>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}