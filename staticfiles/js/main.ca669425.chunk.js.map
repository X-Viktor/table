{"version":3,"sources":["App.js","index.js"],"names":["App","useState","pageActive","setPageActive","useMemo","Math","ceil","rows","count","pageItems","i","push","Pagination","active","onClick","pageStart","setRows","useEffect","axios","method","url","then","response","data","console","log","Container","className","length","results","map","row","date","title","distance","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAoEeA,MAhEf,WACI,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAA+BC,mBAAQ,WACnCC,KAAKC,KAAKC,EAAKC,MAFD,GAId,IADA,IAAIC,EAAY,GAFyB,WAGhCC,GACLD,EAAUE,KACN,cAACC,EAAA,EAAD,CAAoBC,OAAQH,IAAMR,EAAYY,QAAS,kBAAMX,EAAcO,IAA3E,SACKA,EAAI,GADQA,KAFhBA,EAAI,EAAGA,EAJF,EAIiBA,IAAM,EAA5BA,GAQT,MAAM,CACFD,YACAM,UAdU,EAWIb,KAKnB,CAACA,IAfGO,EAAP,EAAOA,UAAWM,EAAlB,EAAkBA,UAiBlB,EAAwBd,mBAAS,IAAjC,mBAAOM,EAAP,KAAaS,EAAb,KAgBA,OAfAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,0CAA4CL,IAClDM,MAAK,SAAAC,GACJN,EAAQM,EAASC,WAEtB,CAACR,IAEJS,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIvB,GACZsB,QAAQC,IAAIV,GAKR,eAACW,EAAA,EAAD,WACI,sBAAKC,UAAU,MAAf,UACI,uCACA,kCACI,+BACI,0DACA,kFACA,8FACA,iGAEa,IAAhBpB,EAAKqB,OAAerB,EAAKsB,QAAQC,KAAI,SAAAC,GAAG,OACrC,+BACI,6BAAKA,EAAIC,OACT,6BAAKD,EAAIE,QACT,6BAAKF,EAAIvB,QACT,6BAAKuB,EAAIG,aAJJH,EAAII,OAMb,qIAGZ,cAACvB,EAAA,EAAD,UACKH,QC1DjB2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ca669425.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport {Container, Pagination, Table} from \"react-bootstrap\";\n\nfunction App() {\n    const [pageActive, setPageActive] = useState(0)\n    const pageLimit = 4\n    const {pageItems, pageStart} = useMemo(() => {\n        Math.ceil(rows.count / pageLimit)\n        let pageItems = []\n        for (let i = 0; i < pageLimit; i++) {\n            pageItems.push(\n                <Pagination key={i} active={i === pageActive} onClick={() => setPageActive(i)}>\n                    {i + 1}\n                </Pagination>\n            )\n        }\n        const pageStart = pageActive * pageLimit\n        return{\n            pageItems,\n            pageStart,\n        }\n    }, [pageActive]);\n\n    const [rows, setRows] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: \"http://127.0.0.1:8000/api/rows/?offset=\" + pageStart\n        }).then(response => {\n            setRows(response.data)\n        })\n    }, [pageStart]);\n\n    console.log(rows);\n    console.log(pageActive);\n    console.log(pageStart);\n\n\n\n    return(\n        <Container>\n            <div className=\"App\">\n                <h1>Table</h1>\n                <table>\n                    <tr>\n                        <th>Дата</th>\n                        <th>Название</th>\n                        <th>Количество</th>\n                        <th>Расстояние</th>\n                    </tr>\n                    {rows.length !== 0 ? rows.results.map(row => (\n                        <tr key={row.id}>\n                            <td>{row.date}</td>\n                            <td>{row.title}</td>\n                            <td>{row.count}</td>\n                            <td>{row.distance}</td>\n                        </tr>\n                    )): <h4>Данные не найдены.</h4>}\n                </table>\n            </div>\n            <Pagination>\n                {pageItems}\n            </Pagination>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}